<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.matchandtrade</groupId>
	<artifactId>mat-web</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>matchandtrade-webservice</name>
	<description>Match and Trade REST Web Service</description>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://github.com/rafasantos/matchandtrade/blob/master/LICENSE.txt</url>
			<comments>Open source, can distribute, can modify, cannot hold liable, provided "as is"</comments>
		</license>
	</licenses>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<!-- Plugin and dependency versions -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<com.h2database.version>1.4.192</com.h2database.version>
		<org.apache.httpcomponents.httpclient>4.5.2</org.apache.httpcomponents.httpclient>
		<io.springfox.version>2.6.0</io.springfox.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<apache-commons-cli>1.3.1</apache-commons-cli>
	</properties>
	
	<dependencies>

		<!-- Spring Boot. Substitutes spring-boot-starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>		
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring Web. Substitutes spring-boot-starter-web -->		
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
	
		<!-- JPA dependencies. Substitutes spring-boot-starter-data-jpa -->	
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-jta_1.1_spec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>javax.transaction-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.aspectj</groupId>
					<artifactId>aspectjrt</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JAXRS. Substitutes spring-boot-starter-jersey -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0</version>
		</dependency>
		
		<!-- Spring HATEOAS. Substitutes spring-boot-starter-hateoas -->
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>
		
		<!-- Testing. Substitutes spring-boot-starter-test -->		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>		
			
		<!-- Logging -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-logging</artifactId>
		</dependency>

		<!-- H2 Database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${com.h2database.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- C3P0 http://www.mchange.com/projects/c3p0 -->
		<dependency>
		    <groupId>com.mchange</groupId>
		    <artifactId>c3p0</artifactId>
		    <version>0.9.5.2</version>
		</dependency>
		
		<!-- Apache HttpComponents -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${org.apache.httpcomponents.httpclient}</version>
		</dependency>
		
		<!-- Apache Commons CLI -->
		<dependency>
		    <groupId>commons-cli</groupId>
		    <artifactId>commons-cli</artifactId>
		    <version>${apache-commons-cli}</version>
		</dependency>

		<!-- Swagger -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>${io.springfox.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>${io.springfox.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<useTestClasspath>true</useTestClasspath>
				</configuration>
			</plugin>
			
			<!-- Unit Tests will test classes ending in *UT-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<parallel>classes</parallel>
					<threadCount>4</threadCount>
					<excludes>
						<exclude>**/*Suite.java</exclude>
						<exclude>**/*Test.java</exclude>
					</excludes>
					<includes>
						<include>**/*UT.java</include>
					</includes>
					<!-- -Xverify:none may reduce startup time. No need to verify bitecode on the test phase -->
					<argLine>-Xverify:none</argLine>
				</configuration>
			</plugin>

			<!-- Integration Tests will test classes ending in *Suite* -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
				<!-- Commenting out parallel until RestController classes can be run in parallel -->
					<parallel>suites</parallel>
					<threadCount>4</threadCount>
					<excludes>
						<exclude>**/*Test.java</exclude>
						<exclude>**/*UT.java</exclude>
					</excludes>
					<includes>
						<include>**/*Suite.java</include>
					</includes>
					<!-- -Xverify:none may reduce startup time. No need to verify bitecode on the test phase -->
					<argLine>-Xverify:none</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

</project>
